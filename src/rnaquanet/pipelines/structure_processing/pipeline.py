from kedro.pipeline import Pipeline, node, pipeline

from .nodes import (
    compress_features,
    extract_features_from_dataset,
    prepare_graphs,
    prepare_raw_data,
    process_features_from_dataset,
)


def create_pipeline(**kwargs) -> Pipeline:
    return pipeline(
        [
            node(
                prepare_raw_data,
                inputs=["params:data.download.url", "params:name"],
                outputs="unarchived_dataset_path",
                name="Prepare_raw_data",
            ),
            node(
                extract_features_from_dataset,
                inputs=[
                    "params:name",
                    "unarchived_dataset_path",
                    "params:data.download.train_directory",
                    "train",
                    "params:data.download.csv_structure_column_name",
                    "params:data.features",
                ],
                outputs="train_processed",
                name="Extract_pdb_train_features",
            ),
            node(
                extract_features_from_dataset,
                inputs=[
                    "params:name",
                    "unarchived_dataset_path",
                    "params:data.download.test_directory",
                    "test",
                    "params:data.download.csv_structure_column_name",
                    "params:data.features",
                ],
                outputs="test_processed",
                name="Extract_pdb_test_features",
            ),
            node(
                extract_features_from_dataset,
                inputs=[
                    "params:name",
                    "unarchived_dataset_path",
                    "params:data.download.val_directory",
                    "val",
                    "params:data.download.csv_structure_column_name",
                    "params:data.features",
                ],
                outputs="val_processed",
                name="Extract_pdb_validation_features",
            ),
            node(
                process_features_from_dataset,
                inputs=[
                    "params:name",
                    "params:data.download.train_directory",
                    "train",
                    "params:data.features",
                    "params:data.download.csv_structure_column_name",
                    "train_processed",
                ],
                outputs="train_full_dataset",
                name="Process_train_features",
            ),
            node(
                process_features_from_dataset,
                inputs=[
                    "params:name",
                    "params:data.download.test_directory",
                    "test",
                    "params:data.features",
                    "params:data.download.csv_structure_column_name",
                    "test_processed",
                ],
                outputs="test_full_dataset",
                name="Process_test_features",
            ),
            node(
                process_features_from_dataset,
                inputs=[
                    "params:name",
                    "params:data.download.val_directory",
                    "val",
                    "params:data.features",
                    "params:data.download.csv_structure_column_name",
                    "val_processed",
                ],
                outputs="val_full_dataset",
                name="Process_val_features",
            ),
            node(
                compress_features,
                inputs=[
                    "val_full_dataset",
                    "params:data.features",
                    "params:data.download.val_directory",
                    "params:name",
                ],
                outputs="val_compressed",
                name="Compress_val_features",
            ),
            node(
                compress_features,
                inputs=[
                    "train_full_dataset",
                    "params:data.features",
                    "params:data.download.train_directory",
                    "params:name",
                ],
                outputs="train_compressed",
                name="Compress_train_features",
            ),
            node(
                compress_features,
                inputs=[
                    "test_full_dataset",
                    "params:data.features",
                    "params:data.download.test_directory",
                    "params:name",
                ],
                outputs="test_compressed",
                name="Compress_test_features",
            ),
            node(
                prepare_graphs,
                inputs=[
                    "train_compressed",
                    "params:name",
                    "params:data.download.train_directory",
                    "params:data.features",
                    "train",
                    "params:data.download.csv_structure_column_name",
                    "params:data.download.csv_rmsd_column_name",
                ],
                name="Create_train_graphs",
                outputs="list_of_train_graphs",
            ),
            node(
                prepare_graphs,
                inputs=[
                    "val_compressed",
                    "params:name",
                    "params:data.download.val_directory",
                    "params:data.features",
                    "val",
                    "params:data.download.csv_structure_column_name",
                    "params:data.download.csv_rmsd_column_name",
                ],
                name="Create_val_graphs",
                outputs="list_of_val_graphs",
            ),
            node(
                prepare_graphs,
                inputs=[
                    "test_compressed",
                    "params:name",
                    "params:data.download.test_directory",
                    "params:data.features",
                    "test",
                    "params:data.download.csv_structure_column_name",
                    "params:data.download.csv_rmsd_column_name",
                ],
                name="Create_test_graphs",
                outputs="list_of_test_graphs",
            ),
        ]
    )
